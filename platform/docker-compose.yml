version: '3'

networks:
  storage:
    driver: overlay
  public:
    driver: overlay

services:
  traefik:
    image: traefik
    command: --web --docker --docker.swarmmode --docker.watch --docker.domain=g.io --logLevel=DEBUG
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/null:/traefik.toml
    labels:
      - "traefik.enable=false"
    depends_on:
      - apim_gateway
      - apim_portal
      - apim_management
      - am_gateway
      - am_management
      - am_webui
    networks:
      - public
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure

  mongodb:
    image: mongo:3.4
    deploy:
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: any
    environment:
      - MONGO_INITDB_DATABASE=gravitee
    volumes:
      - ./mongo/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - /data/db
      - ./logs/mongodb:/var/log/mongodb
    labels:
      - "traefik.enable=false"
    networks:
      - storage

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.1
    deploy:
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: any
      labels:
        - "traefik.enable=false"
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - cluster.name=elasticsearch
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data
      - ./logs/elasticsearch:/var/log/elasticsearch
    networks:
      - storage

  apim_gateway:
    image: graviteeio/gateway:latest
    deploy:
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: any
      labels:
        - "traefik.frontend.rule=Host:api.gravitee.io"
        - "traefik.port=8082"
        - "traefik.docker.network=apiplatform_public"
        - "traefik.enable=true"
        - "traefik.backend=apim_gateway"
    volumes:
      - ./logs/apim-gateway:/opt/graviteeio-gateway/logs
    environment:
      - gravitee_management_mongodb_uri=mongodb://mongodb:27017/gravitee?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_ratelimit_mongodb_uri=mongodb://mongodb:27017/gravitee?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_reporters_elasticsearch_endpoints_0=http://elasticsearch:9200
    depends_on:
      - mongodb
      - elasticsearch
    networks:
      - public
      - storage

  apim_portal:
    image: graviteeio/management-ui:latest
    deploy:
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: any
      labels:
        - "traefik.frontend.rule=Host:developers.gravitee.io"
        - "traefik.port=80"
        - "traefik.docker.network=apiplatform_public"
        - "traefik.enable=true"
        - "traefik.backend=apim_portal"
    environment:
      - MGMT_API_URL=http:\/\/developers.gravitee.io\/management\/
    volumes:
      - ./gio_apim/portal/constants.json:/var/www/html/constants.json.template
    depends_on:
      - apim_management
    networks:
      - public
      - storage

  apim_management:
    image: graviteeio/management-api:latest
    deploy:
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: any
      labels:
        - "traefik.frontend.rule=Host:developers.gravitee.io;PathPrefixStrip:/management"
        - "traefik.port=8083"
        - "traefik.docker.network=apiplatform_public"
        - "traefik.enable=true"
        - "traefik.backend=apim_management"
    volumes:
      - ./logs/apim-management-api:/opt/graviteeio-management-api/logs
    environment:
      - gravitee_management_mongodb_uri=mongodb://mongodb:27017/gravitee?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_ratelimit_mongodb_uri=mongodb://mongodb:27017/gravitee?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_analytics_elasticsearch_endpoints_0=http://elasticsearch:9200
      - gravitee_jwt_cookiepath=/apim/management
      - gravitee_jwt_cookiesecure=true
    depends_on:
      - mongodb
      - elasticsearch
    networks:
      - public
      - storage

  am_gateway:
    image: graviteeio/am-gateway:2
    deploy:
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: any
      labels:
        - "traefik.frontend.rule=Host:auth.gravitee.io"
        - "traefik.port=8092"
        - "traefik.docker.network=apiplatform_public"
        - "traefik.enable=true"
        - "traefik.backend=am_gateway"
    volumes:
      - ./logs/am-gateway:/opt/graviteeio-am-gateway/logs
    environment:
      - gravitee_management_mongodb_uri=mongodb://mongodb:27017/gravitee-am?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_oauth2_mongodb_uri=mongodb://mongodb:27017/gravitee-am?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
    depends_on:
      - mongodb
    networks:
      - public
      - storage

  am_management:
    image: graviteeio/am-management-api:2
    deploy:
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: any
      labels:
        - "traefik.frontend.rule=Host:auth-admin.gravitee.io;PathPrefix:/management,/admin"
        - "traefik.port=8093"
        - "traefik.docker.network=apiplatform_public"
        - "traefik.enable=true"
        - "traefik.backend=am_management"
    volumes:
      - ./logs/am-management-api:/opt/graviteeio-am-management-api/logs
    environment:
      - gravitee_management_mongodb_uri=mongodb://mongodb:27017/gravitee-am?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_oauth2_mongodb_uri=mongodb://mongodb:27017/gravitee-am?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_jwt_cookiepath=/am/management
      - gravitee_jwt_cookiesecure=true
    depends_on:
      - mongodb
    networks:
      - public
      - storage

  am_webui:
    image: graviteeio/am-management-ui:2
    deploy:
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: any
      labels:
        - "traefik.frontend.rule=Host:auth-admin.gravitee.io"
        - "traefik.port=80"
        - "traefik.docker.network=apiplatform_public"
        - "traefik.enable=true"
        - "traefik.backend=am_webui"
    environment:
      - MGMT_API_URL=http:\/\/auth-admin.gravitee.io\/management\/
      - MGMT_UI_URL=http:\/\/auth-admin.gravitee.io\/
    volumes:
      - ./logs/am-webui:/var/log/nginx
    depends_on:
      - am_management
    networks:
      - public
      - storage